package shapes;

import static org.lwjgl.opengl.GL11.glBegin;
import static org.lwjgl.opengl.GL11.GL_TRIANGLE_STRIP;
import static org.lwjgl.opengl.GL11.GL_LINE_LOOP;
import static org.lwjgl.opengl.GL11.glVertex3f;
import static org.lwjgl.opengl.GL11.glEnd;
import static java.lang.Math.cos;
import static java.lang.Math.sin;
import static java.lang.Math.PI;
public class Sphere extends Shapes {
	
	@Override
	public void render() {
		// TODO Auto-generated method stub
		float x, y, z, alpha, beta; // Storage for coordinates and angles        
		float radius = 60.0f;
		int gradation = 20;

		for (alpha = 0.0f; alpha < PI/180; alpha += PI/gradation)
		{        
		    glBegin(GL_TRIANGLE_STRIP);
		    for (beta = 0.0f; beta < 2.01*PI/180; beta += PI/gradation)            
		    {            
		        x = (float)(radius*cos(beta)*sin(alpha));
		        y = (float)(radius*sin(beta)*sin(alpha));
		        z = (float)(radius*cos(alpha));
		        glVertex3f(x, y, z);
		        x = (float)(radius*cos(beta)*sin(alpha + PI/gradation));
		        y = (float)(radius*sin(beta)*sin(alpha + PI/gradation));
		        z = (float)(radius*cos(alpha + PI/gradation));            
		        glVertex3f(x, y, z);
		       
		    }     
		    glEnd();
		}
	}

}
